container_commands:
  01_enable_swap:
    command: |
      echo "Enabling swap..."
      sudo fallocate -l 1G /swapfile
      sudo chmod 600 /swapfile
      sudo mkswap /swapfile
      sudo swapon /swapfile
      echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab

  02_install_dependencies:
    command: |
      echo "Installing dependencies..."
      sudo yum update -y
      sudo yum install -y nginx
      sudo amazon-linux-extras enable epel
      sudo yum install -y epel-release
      sudo yum install -y certbot python2-certbot-nginx

  03_configure_nginx:
    command: |
      echo "Configuring Nginx..."
      # Increase server_names_hash_bucket_size for longer domain names
      sudo sed -i '/http {/a \    server_names_hash_bucket_size 128;' /etc/nginx/nginx.conf

      # Create a temporary HTTP configuration for Certbot validation
      sudo bash -c 'cat > /etc/nginx/conf.d/flask-app.conf <<EOF
      server {
          listen 80;
          server_name flask-app-server-env.ap-south-1.elasticbeanstalk.com bk.flask-app-server-env.ap-south-1.elasticbeanstalk.com;

          location /.well-known/acme-challenge/ {
              root /var/www/html;
          }

          location / {
              proxy_pass http://127.0.0.1:5000;  # Correct port for Flask app
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          }
      }
      EOF'

      # Start and enable Nginx
      sudo systemctl start nginx
      sudo systemctl enable nginx

  04_certbot_setup:
    command: |
      echo "Setting up Certbot..."
      # Wait for Nginx to start
      while ! systemctl is-active --quiet nginx; do
        sleep 1
      done

      # Obtain SSL certificate using Certbot
      sudo certbot certonly --nginx -d flask-app-server-env.ap-south-1.elasticbeanstalk.com -d bk.flask-app-server-env.ap-south-1.elasticbeanstalk.com --non-interactive --agree-tos -m singhaadi2004@gmail.com --test-cert

      # Update Nginx configuration to support HTTPS
      sudo bash -c 'cat > /etc/nginx/conf.d/flask-app.conf <<EOF
      server {
          listen 80;
          server_name flask-app-server-env.ap-south-1.elasticbeanstalk.com bk.flask-app-server-env.ap-south-1.elasticbeanstalk.com;

          # Redirect HTTP to HTTPS
          return 301 https://$host$request_uri;
      }

      server {
          listen 443 ssl;
          server_name flask-app-server-env.ap-south-1.elasticbeanstalk.com bk.flask-app-server-env.ap-south-1.elasticbeanstalk.com;

          ssl_certificate /etc/letsencrypt/live/flask-app-server-env.ap-south-1.elasticbeanstalk.com/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/flask-app-server-env.ap-south-1.elasticbeanstalk.com/privkey.pem;

          location / {
              proxy_pass http://127.0.0.1:5000;  # Correct port for Flask app
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
      EOF'

      # Restart Nginx to apply changes
      sudo systemctl restart nginx

  05_certbot_renew_cron:
    command: |
      echo "Setting up Certbot renewal cron job..."
      echo "0 0,12 * * * root certbot renew --quiet && sudo systemctl reload nginx" | sudo tee /etc/cron.d/certbot-renew > /dev/null